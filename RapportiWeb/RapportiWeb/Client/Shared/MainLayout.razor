@using Blazored.LocalStorage;
@inherits LayoutComponentBase
@inject NavigationManager nav
@inject ILocalStorageService localstorage
@inject AuthenticationStateProvider authstate
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization;


<MudThemeProvider Theme="MyCustomTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>

    <MudAppBar Color="Color.Primary" Fixed="false">
        <MudImage Src="\img\logo.png" Fluid="true" Width="225" />
        <MudSpacer />
        <AuthorizeView>
            @if (authorized)
            {
                <MudIconButton Icon="@Icons.Material.Filled.AdminPanelSettings" Color="Color.Inherit" @onclick="@(()=>{nav.NavigateTo("/admin");})" />
            }
            <MudIconButton Icon="@Icons.Material.Filled.Home" Color="Color.Inherit" @onclick="@(()=>{nav.NavigateTo("/");})" />

            <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" @onclick="@(async()=>{await LogOut();})" />
        </AuthorizeView>
    </MudAppBar>

    <MudMainContent>
        <AuthorizeView>
            <Authorized>
                @Body
            </Authorized>
            <NotAuthorized>
                <RapportiWeb.Client.Pages.Login />
            </NotAuthorized>
        </AuthorizeView>
    </MudMainContent>

</MudLayout>

@code {
    bool authorized;

    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = "#337ab7",
            },
        };

    protected override async Task OnInitializedAsync()
    {
        var role = (await authstate.GetAuthenticationStateAsync()).User.Claims
        .FirstOrDefault(c => c.Type == ClaimTypes.IsPersistent)?.Value;

        if (role == "1")
        {
            authorized = true;
        }
        else
        {
            authorized = false;
        }
    }



    private async Task LogOut()
    {
        await localstorage.RemoveItemAsync("authToken");
        await authstate.GetAuthenticationStateAsync();

        nav.NavigateTo("/login");
    }


}