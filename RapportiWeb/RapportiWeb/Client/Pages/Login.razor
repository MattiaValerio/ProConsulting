@page "/Login"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudGrid Justify="Justify.Center">
	

	<MudItem xs="10" sm="8" md="5" xl="3">
		<MudPaper Elevation="12" Class="pa-4 d-flex flex-column justify-content-center">
			<MudImage Fluid="true" Src="/img/logo.png"></MudImage>

			<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
				<MudTextField T="string" Label="Username" />
				<MudTextField T="string" Label="Password" @ref="pwField1"
							  InputType="InputType.Password" />
			</MudForm>
			<MudButton Class="mt-4" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>form.Validate())">LOGIN</MudButton>
		</MudPaper>
	</MudItem>

</MudGrid>


@code {
	bool success;
	string[] errors = { };
	MudTextField<string> pwField1;
	MudForm form;

	private IEnumerable<string> PasswordStrength(string pw)
	{
		if (string.IsNullOrWhiteSpace(pw))
		{
			yield return "Password is required!";
			yield break;
		}
		if (pw.Length < 8)
			yield return "Password must be at least of length 8";
		if (!Regex.IsMatch(pw, @"[A-Z]"))
			yield return "Password must contain at least one capital letter";
		if (!Regex.IsMatch(pw, @"[a-z]"))
			yield return "Password must contain at least one lowercase letter";
		if (!Regex.IsMatch(pw, @"[0-9]"))
			yield return "Password must contain at least one digit";
	}

	private string PasswordMatch(string arg)
	{
		if (pwField1.Value != arg)
			return "Passwords don't match";
		return null;
	}

}