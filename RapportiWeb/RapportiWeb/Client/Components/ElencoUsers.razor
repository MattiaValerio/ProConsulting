@using RapportiWeb.Client.Services.Users;

@inject HttpClient httpClient
@inject IUsersServices UsersServices
@inject IClientiService ClientiService

<MudItem xs="12">
    @if (_ListaUtenti is null)
    {
        <MudItem xs="12" Style="display:flex; justify-content:center; align-items:center;">
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        </MudItem>
    }
    else
    {
        <MudTable Elevation="4" Items="_ListaUtenti" Height="100" Breakpoint="Breakpoint.Sm" Striped="true" Virtualize="true" FixedHeader="true">
            <HeaderContent>
                <MudTh>UserName</MudTh>
                <MudTh>Nome</MudTh>
                <MudTh>Cognome</MudTh>
                <MudTh>Organizzazione</MudTh>
                <MudTh>Modifica</MudTh>
                <MudTh>Elimina</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Username">@context.UserName</MudTd>
                <MudTd DataLabel="Nome Creazione">@context.Nome</MudTd>
                <MudTd DataLabel="Cognome">@context.Cognome</MudTd>
                <MudTd DataLabel="Organizzazione">@_ListaClienti.FirstOrDefault(c=> c.id == context.ClienteId).ragioneSociale</MudTd>
                <MudTd DataLabel="Modifica">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" aria-label="github" OnClick="@(()=>{})"></MudIconButton>
                </MudTd>
                <MudTd DataLabel="Elimina">
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" aria-label="github" @onclick="@(()=>{})"></MudIconButton>
                </MudTd>
            </RowTemplate>
        </MudTable>
    }

</MudItem>

@code {
    private string searchString1 = string.Empty;
    private string selecteduser = string.Empty;
    private HashSet<User> selectedItems = new HashSet<User>();
    private List<User> _ListaUtenti;
    private List<Cliente> _ListaClienti = new List<Cliente>();

    protected override async Task OnInitializedAsync()
    {
        var res = await UsersServices.GetUsers();
        _ListaUtenti = res.Data;
        _ListaClienti = await ClientiService.GetClienti();

    }
}
