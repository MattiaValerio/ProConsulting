@inject IRapportiService RapportiService
@inject IRichiesteService RichiesteService
@inject IClientiService ClientiService
@inject IPdfService PDFService
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthStateProvider
@using Microsoft.AspNetCore.Authorization;
@using System.Security.Claims;


@if (RapportoCreation && tecnico)
{
    <MudItem xs="12">
        <MudPaper Class="pa-6" Elevation="5">

            <MudForm Model="Rapporto" @ref="form">
                <MudGrid Justify="Justify.Center">

                    <MudItem xs="12" sm="12" md="12">
                        <MudAutocomplete Disabled="true" @bind-Value="Cliente.ragioneSociale"
                                         Required="true" RequiredError="Selezionare un cliente" For="@(() => Cliente.ragioneSociale)"
                                         T="string" Label="Cliente" SearchFunc="Search"
                                         ShowProgressIndicator="true">
                            <ProgressIndicatorTemplate>
                                <MudProgressLinear Size="Size.Small" Indeterminate="true" Color="Color.Primary" />
                            </ProgressIndicatorTemplate>
                        </MudAutocomplete>
                    </MudItem>

                    <MudItem xs="12" md="4">
                        <MudTextField @bind-Value="Rapporto.RespRic" T="string" Label="Responsabile richiesta"
                                      Required="true" RequiredError="Campo obbligatorio!" For="@(() => Rapporto.RespRic)" />
                    </MudItem>

                    <MudItem xs="12" md="4">
                        <MudTextField @bind-Value="Rapporto.RespInt" For="@(() => Rapporto.RespInt)" T="string" Label="Responsabile Intervento" Required="true" RequiredError="Campo obbligatorio!" />
                    </MudItem>

                    <MudItem xs="12" md="4">
                        <MudTextField @bind-Value="Rapporto.Incaricato" For="@(() => Rapporto.Incaricato)" T="string" Label="Incaricato dell'Intervento" Required="true" RequiredError="Campo obbligatorio!" />
                    </MudItem>

                    <MudItem xs="12" md="12">
                        <MudSelect T="string" For="@(() => Rapporto.LuogoIntervento)" Label="Luogo Intervento" Required="true" RequiredError="Campo obbligatorio!" @bind-Value="Rapporto.LuogoIntervento" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem Value="@("Intervento presso il cliente")" />
                            <MudSelectItem Value="@("Intervento Assistenza remota")" />
                        </MudSelect>
                        @if (Rapporto.LuogoIntervento == "Intervento Assistenza remota")
                        {
                            <MudTextField @bind-Value="Rapporto.IdCollegamento" T="string" Label="ID Collegamento" Required="true" RequiredError="Campo obbligatorio!" />
                        }
                    </MudItem>

                    <MudItem xs="12" md="12">
                        <MudSelect @bind-Value="Rapporto.TipoIntervento" For="@(() => Rapporto.TipoIntervento)" Required="true" RequiredError="Campo obbligatorio!" T="string" Label="Tipologia Intervento" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem Value="@("Contratto")" />
                            <MudSelectItem Value="@("In Garanzia")" />
                            <MudSelectItem Value="@("Rif.Offerta/C.O.")" />
                            <MudSelectItem Value="@("Altro: ")" />
                        </MudSelect>
                        @if (Rapporto.TipoIntervento == "Rif.Offerta/C.O." || Rapporto.TipoIntervento == "Altro: ")
                        {
                            <MudTextField @bind-Value="Rapporto.TipoIntervento" Label="Specificare Offerta/Altro" Variant="Variant.Text"></MudTextField>
                        }
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudDatePicker DateFormat="dd/MM/yyyy" Label="Data intervento" Required="true" RequiredError="Campo obbligatorio!" @bind-Date="Rapporto.DataIntervento" For="@(() => Rapporto.DataIntervento)" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudSelect T="string" Required="true" RequiredError="Campo obbligatorio!" Label="Durata intervento" For="@(() => Rapporto.DurataIntervento)" @bind-Value="Rapporto.DurataIntervento" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem Value="@("Mattina")" />
                            <MudSelectItem Value="@("Pomeriggio")" />
                            <MudSelectItem Value="@("Giornata intera")" />
                            <MudSelectItem Value="@("Mattina straordinario")" />
                            <MudSelectItem Value="@("Pomeriggio straordinario")" />
                            <MudSelectItem Value="@("Giornata Intera straordinario")" />
                        </MudSelect>
                    </MudItem>

                    <MudItem xs="12">
                        <MudTextField @bind-Value="Rapporto.Descrizione" T="string" Label="Descrizione intervento" Variant="Variant.Text" Lines="15" />
                    </MudItem>

                    <MudItem xs="12" Class="d-flex justify-content-around">
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>{Annulla.InvokeAsync();})">Annulla</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(()=>{GenerateRapporto(Rapporto, Richiesta);})">Crea Rapporto</MudButton>
                    </MudItem>
                </MudGrid>
            </MudForm>

        </MudPaper>
    </MudItem>

}
else
{
    <MudItem xs="12">
        <MudPaper Class="pa-6" Elevation="5">
            <MudForm Model="Rapporto" @ref="form">
                <MudGrid Justify="Justify.Center">

                    @if (Edit)
                    {
                        <MudItem xs="12" sm="12" md="12">
                            <MudAutocomplete Disabled="true" @bind-Value="Cliente.ragioneSociale" Required="true" RequiredError="Selezionare un cliente" T="string" Label="Cliente" SearchFunc="Search" ShowProgressIndicator="true">
                                <ProgressIndicatorTemplate>
                                    <MudProgressLinear Size="Size.Small" Indeterminate="true" Color="Color.Primary" />
                                </ProgressIndicatorTemplate>
                            </MudAutocomplete>
                        </MudItem>
                    }
                    else
                    {
                        <MudItem xs="12" sm="12" md="12">
                            <MudAutocomplete @bind-Value="Cliente.ragioneSociale" For="@(() => Cliente.ragioneSociale)" Required="true" RequiredError="Selezionare un cliente" T="string" Label="Cliente" SearchFunc="Search" ShowProgressIndicator="true">
                                <ProgressIndicatorTemplate>
                                    <MudProgressLinear Size="Size.Small" Indeterminate="true" Color="Color.Primary" />
                                </ProgressIndicatorTemplate>
                            </MudAutocomplete>
                        </MudItem>
                    }

                    <MudItem xs="12" md="4">
                        <MudTextField @bind-Value="Rapporto.RespRic" For="@(() => Rapporto.RespRic)" T="string" Label="Responsabile richiesta" Required="true" RequiredError="Campo obbligatorio!" />
                    </MudItem>

                    <MudItem xs="12" md="4">
                        <MudTextField @bind-Value="Rapporto.RespInt" For="@(() => Rapporto.RespInt)" T="string" Label="Responsabile Intervento" Required="true" RequiredError="Campo obbligatorio!" />
                    </MudItem>

                    <MudItem xs="12" md="4">
                        <MudTextField @bind-Value="Rapporto.Incaricato" For="@(() => Rapporto.Incaricato)" T="string" Label="Incaricato dell'Intervento" Required="true" RequiredError="Campo obbligatorio!" />
                    </MudItem>

                    <MudItem xs="12" md="12">
                        <MudSelect T="string" Label="Luogo Intervento" @bind-Value="Rapporto.LuogoIntervento" For="@(() => Rapporto.LuogoIntervento)" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem Value="@("Intervento presso il cliente")" />
                            <MudSelectItem Value="@("Intervento Assistenza remota")" />
                        </MudSelect>
                        @if (Rapporto.LuogoIntervento == "Intervento Assistenza remota")
                        {
                            <MudTextField @bind-Value="Rapporto.IdCollegamento" For="@(() => Rapporto.IdCollegamento)" T="string" Label="ID Collegamento" Required="true" RequiredError="Campo obbligatorio!" />
                        }
                    </MudItem>

                    <MudItem xs="12" md="12">
                        <MudSelect @bind-Value="Rapporto.TipoIntervento" For="@(() => Rapporto.TipoIntervento)" T="string" Label="Tipologia Intervento" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem Value="@("Contratto")" />
                            <MudSelectItem Value="@("In Garanzia")" />
                            <MudSelectItem Value="@("Rif.Offerta/C.O.")" />
                            <MudSelectItem Value="@("Altro: ")" />
                        </MudSelect>
                        @if (Rapporto.TipoIntervento == "Rif.Offerta/C.O." || Rapporto.TipoIntervento == "Altro: ")
                        {
                            <MudTextField @bind-Value="Rapporto.TipoIntervento" For="@(() => Rapporto.TipoIntervento)" Label="Specificare Offerta/Altro" Variant="Variant.Text"></MudTextField>
                        }
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudDatePicker DateFormat="dd/MM/yyyy" Label="Data intervento" Required="true" For="@(() => Rapporto.DataIntervento)" @bind-Date="Rapporto.DataIntervento" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudSelect T="string" Label="Durata intervento" For="@(() => Rapporto.DurataIntervento)" @bind-Value="Rapporto.DurataIntervento" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem Value="@("Mattina")" />
                            <MudSelectItem Value="@("Pomeriggio")" />
                            <MudSelectItem Value="@("Giornata intera")" />
                            <MudSelectItem Value="@("Mattina straordinario")" />
                            <MudSelectItem Value="@("Pomeriggio straordinario")" />
                            <MudSelectItem Value="@("Giornata Intera straordinario")" />
                        </MudSelect>
                    </MudItem>

                    <MudItem xs="12">
                        <MudTextField @bind-Value="Rapporto.Descrizione" T="string" Label="Descrizione intervento" Variant="Variant.Text" Lines="15" />
                    </MudItem>

                    @if (Edit)
                    {
                        <MudItem xs="12" Class="d-flex justify-content-around">
                            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>{ShowHidePopUp.InvokeAsync();})">Annulla</MudButton>
                            @if (tecnico)
                            {
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(()=>{EditRapporto(Rapporto);})">Modifica Rapporto</MudButton>
                                <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>{DownloadPDF(Rapporto);})">Download</MudButton>
                            }
                            else
                            {
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(()=>{DownloadPDF(Rapporto);})">Download</MudButton>
                            }
                        </MudItem>
                    }
                    else
                    {
                        <MudItem xs="12" Class="d-flex justify-content-around">
                            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>{ShowHidePopUp.InvokeAsync();})">Annulla</MudButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(()=>{CreateRapporto(Rapporto);})">Crea Rapporto</MudButton>
                        </MudItem>
                    }
                </MudGrid>
            </MudForm>
        </MudPaper>
    </MudItem>

}



@code {
    [Parameter]
    public Rapporto Rapporto { get; set; } = new Rapporto();

    [Parameter]
    public Richiesta Richiesta { get; set; } = new Richiesta();

    [Parameter]
    public Cliente Cliente { get; set; } = new Cliente();

    public DateTime Date { get; set; }

    [Parameter]
    public EventCallback ShowHidePopUp { get; set; }

    [Parameter]
    public EventCallback Annulla { get; set; }

    [Parameter]
    public bool Edit { get; set; } = false;

    [Parameter]
    public bool RapportoCreation { get; set; } = false;


    private string[] ArrClienti;

    private bool tecnico = false;
    MudForm form;


    protected override async Task OnInitializedAsync()
    {
        var role = (await AuthStateProvider.GetAuthenticationStateAsync()).User.Claims
         .FirstOrDefault(c => c.Type == ClaimTypes.Role).Value;

        if (role == "Tecnico")
        {
            tecnico = true;

        }
        else if (role == "Cliente")
        {
            tecnico = false;

        }
    }



    private async Task<IEnumerable<string>> Search(string value)
    {
        ArrClienti = await ClientiService.GetArrayClienti();

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return ArrClienti;
        return ArrClienti.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

    private async Task CreateRapporto(Rapporto rapporto)
    {
        if (form.IsValid)
        {
            try
            {
                var cliente = await ClientiService.GetCliente(Cliente.ragioneSociale);
                Rapporto.Clienteid = cliente.id;
                await RapportiService.CreateRapporto(rapporto);
                await ShowHidePopUp.InvokeAsync();

            }
            catch
            {
                Console.WriteLine("CLIENTE NON PRESENTE NEL DB");
            }

        }
    }

    private async Task GenerateRapporto(Rapporto rapporto, Richiesta richiesta)
    {
        try
        {
            var cliente = await ClientiService.GetCliente(Cliente.ragioneSociale);
            Rapporto.Clienteid = cliente.id;
            await RapportiService.GenerateRapporto(richiesta, rapporto);
            await ShowHidePopUp.InvokeAsync();

        }
        catch
        {
            Console.WriteLine("CLIENTE NON PRESENTE NEL DB");
        }
    }

    private async Task EditRapporto(Rapporto rapporto)
    {
        form.Validate();

        if (form.IsValid)
        {
            try
            {
                await RapportiService.UpdateRapporto(rapporto);
                await ShowHidePopUp.InvokeAsync();
                Rapporto = new Rapporto();
                Cliente = new Cliente();

            }
            catch
            {
                Console.WriteLine("ERRORE NELLA MODIFICA DEL RAPPORTO");
            }

        }


        Console.WriteLine("FINE");
    }

    private async Task DownloadPDF(Rapporto rap)
    {
        await PDFService.DownloadRapporto(Cliente, rap);
        await JSRuntime.InvokeAsync<object>("open", $"/pdf/rap{rap.id}.pdf", "_blank");
    }
}
